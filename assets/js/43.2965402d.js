(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{397:function(s,n,a){"use strict";a.r(n);var t=a(42),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h4",{attrs:{id:"portals"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#portals"}},[s._v("#")]),s._v(" "),a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/portals.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Portals"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("在了解"),a("code",[s._v("portals")]),s._v("之前我们先了解我为什么要用它，大概情况是这样子的：在一个"),a("code",[s._v("taps")]),s._v("中两个表格，每个表格"),a("code",[s._v("td")]),s._v("点击都会触发一个弹框效果，但是弹框没有全局而是和"),a("code",[s._v("table")]),s._v("元素同级的，点击第一个表格的弹窗时，发现可以正常显示，但是当"),a("code",[s._v("tab")]),s._v("切换到弹窗一直显示不出来，审查元素时发现样式什么都正常。为什么？")]),s._v(" "),a("p",[s._v("由于弹窗是"),a("code",[s._v("fixed")]),s._v("定位的，且什么设置了居中的效果，但是第一次可以显示而第二次显示，由于"),a("code",[s._v("fixed")]),s._v("定位是相对于"),a("code",[s._v("viewport")]),s._v("定位的，难道"),a("code",[s._v("fixed")]),s._v("定位的失效了，百度下发现真的会有失效的情况：当"),a("code",[s._v("fixed")]),s._v("定位的祖先元素中有使用"),a("code",[s._v("transform")]),s._v("的，会使"),a("code",[s._v("fixed")]),s._v("定位相对于该元素定位而不是"),a("code",[s._v("viewport")]),s._v("定位，审查元素发现父元素真的有"),a("code",[s._v("transform")]),s._v("。")]),s._v(" "),a("p",[s._v("虽然知道了出现问题的原因但是没有好的办法去修改这种情况，还是希望可以弹窗相对于"),a("code",[s._v("viewPort")]),s._v("去定位的。最后想到可以和组件库一样将一个组件的中使用的弹窗挂载到body下面。查了下资料，发小"),a("code",[s._v("portals")]),s._v("可以实现我的需求。")]),s._v(" "),a("h5",{attrs:{id:"portals简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#portals简介"}},[s._v("#")]),s._v(" "),a("code",[s._v("Portals")]),s._v("简介")]),s._v(" "),a("p",[s._v("Portal 提供了一种将子节点渲染到存在于父组件以外的 DOM 节点的优秀的方案。")]),s._v(" "),a("div",{staticClass:"language-jsx line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-jsx"}},[a("code",[s._v("ReactDOM"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("createPortal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("child"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" container"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("第一个参数（"),a("code",[s._v("child")]),s._v("）是任何"),a("a",{attrs:{href:"https://zh-hans.reactjs.org/docs/react-component.html#render",target:"_blank",rel:"noopener noreferrer"}},[s._v("可渲染的 React 子元素"),a("OutboundLink")],1),s._v("，例如一个元素，字符串或 fragment。第二个参数（"),a("code",[s._v("container")]),s._v("）是一个 DOM 元素。")]),s._v(" "),a("p",[s._v("利用该"),a("code",[s._v("api")]),s._v("我们可以实现我们的弹窗组件(挂载到"),a("code",[s._v("body")]),s._v("元素下面的)")]),s._v(" "),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// CustomDialog.js\nconst modalRoot = document.body;\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.el = document.createElement('div');\n  }\n\n  componentDidMount() {\n    // 在 Modal 的所有子元素被挂载后，\n    // 这个 portal 元素会被嵌入到 DOM 树中，\n    // 这意味着子元素将被挂载到一个分离的 DOM 节点中。\n    // 如果要求子组件在挂载时可以立刻接入 DOM 树，\n    // 例如衡量一个 DOM 节点，\n    // 或者在后代节点中使用 ‘autoFocus’，\n    // 则需添加 state 到 Modal 中，\n    // 仅当 Modal 被插入 DOM 树中才能渲染子元素。\n    modalRoot.appendChild(this.el);\n  }\n\n  componentWillUnmount() {\n    modalRoot.removeChild(this.el);\n  }\n\n  render() {\n    // Dialog来自组件库\n    return ReactDOM.createPortal(\n      <Dialog>...</Dialog>,\n      this.el\n    );\n  }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br")])]),a("div",{staticClass:"language-react line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("import MyDialog from './CustomDialog.js'\nclass Parent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {show: false};\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    // 当子元素里的按钮被点击时，\n    // 这个将会被触发更新父元素的 state，\n    // 即使这个按钮在 DOM 中不是直接关联的后代\n    this.setState(state => ({\n      show: true\n    }));\n  }\n\n  render() {\n    return (\n      <div >\n  \t\t\t<button onClick={this.handleClick}>click</button>\n        {show  && <MyDialog/> }\n      </div>\n    );\n  }\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])]),a("p",[s._v("通过"),a("code",[s._v("show")]),s._v("来控制"),a("code",[s._v("MyDialog")]),s._v("的创建和销毁，创建时会挂在到"),a("code",[s._v("body")]),s._v("元素下面，销毁的时候从"),a("code",[s._v("body")]),s._v("元素上移除。")])])}),[],!1,null,null,null);n.default=e.exports}}]);