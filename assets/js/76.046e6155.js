(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{427:function(s,t,a){"use strict";a.r(t);var n=a(42),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h4",{attrs:{id:"java变量和数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java变量和数据类型"}},[s._v("#")]),s._v(" Java变量和数据类型")]),s._v(" "),a("h5",{attrs:{id:"_1-变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-变量"}},[s._v("#")]),s._v(" 1. 变量")]),s._v(" "),a("p",[s._v("变量用来临时存储数据，使用前需要去声明（会在内容中分配一个对应类型大小的空间）,声明完成后我们可以使用变量名去使用这块内容空间。")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token namespace"}},[s._v("java"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("util"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")])]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Scanner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Var_02")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t   \t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Scanner")]),s._v(" sc "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Scanner")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("in"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("next")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("nextInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"name="')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" age="')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" age "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h5",{attrs:{id:"_2-变量的声明方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-变量的声明方式"}},[s._v("#")]),s._v(" 2. 变量的声明方式")]),s._v(" "),a("ul",[a("li",[s._v("数据类型 变量名 = 初始值;")]),s._v(" "),a("li",[s._v("其中=初始值可以省略，但;不可以省略")])]),s._v(" "),a("h5",{attrs:{id:"_3-变量的注意事项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-变量的注意事项"}},[s._v("#")]),s._v(" 3. 变量的注意事项")]),s._v(" "),a("ul",[a("li",[s._v("Java是强类型语言，变量在使用前必须声明来指明其数据类型。 - 变量在使用之前必须初始化。")]),s._v(" "),a("li",[s._v("变量不能重复声明")])]),s._v(" "),a("h5",{attrs:{id:"_4-标识符-标识符可以给类-变量-属性-方法-包-起名字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-标识符-标识符可以给类-变量-属性-方法-包-起名字"}},[s._v("#")]),s._v(" 4. 标识符( 标识符可以给类/变量/属性/方法/包 起名字)")]),s._v(" "),a("ul",[a("li",[s._v("标识符的命名法则(笔试)\n"),a("ul",[a("li",[s._v("由数字、字母、下划线以及$等组成，其中数字不能开头(后面讲到)。")]),s._v(" "),a("li",[s._v("不能使用Java语言的关键字，所谓关键字就是Java语言用于表示特殊含义\n的单词。")]),s._v(" "),a("li",[s._v("区分大小写，长度没有限制但不宜过长。")]),s._v(" "),a("li",[s._v("尽量做到见名知意，支持中文但不推荐使用。")]),s._v(" "),a("li",[s._v("标识符可以给类/变量/属性/方法/包 起名字。")])])])]),s._v(" "),a("h5",{attrs:{id:"_5-官方库的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-官方库的使用"}},[s._v("#")]),s._v(" 5.官方库的使用")]),s._v(" "),a("ul",[a("li",[s._v("JDK中带有大量的API类, 是有Java系统带来的工具库, 这些工具数以万计! 是Java官方程序员的技术积累。")]),s._v(" "),a("li",[s._v("使用这些类可以大大简化编程, 提高开发效率。")]),s._v(" "),a("li",[s._v("具体的API类功能, 可以参阅Java的参考手册")])]),s._v(" "),a("h5",{attrs:{id:"_6-数据类型的分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-数据类型的分类"}},[s._v("#")]),s._v(" 6.数据类型的分类")]),s._v(" "),a("ul",[a("li",[s._v("在Java语言中数据类型主要分为两大类:")]),s._v(" "),a("li",[s._v("(1)基本数据类型(记住)\nbyte、short、int、long、float、double、boolean、char")]),s._v(" "),a("li",[s._v("(2)引用数据类型(了解)\n数组、类、接口、枚举、标注")])]),s._v(" "),a("h5",{attrs:{id:"_7-常用的进制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-常用的进制"}},[s._v("#")]),s._v(" 7.常用的进制")]),s._v(" "),a("ul",[a("li",[s._v("在日常生活中采用十进制进行数据的描述，逢十进一，十进制权重是: 10^0、10^1、10^2、...")]),s._v(" "),a("li",[s._v("在计算机的底层采用0和1组成的二进制序列进行数据的描述，逢二进一， 二进制的权重是2^0、2^1、2^2、...")]),s._v(" "),a("li",[s._v("二进制中的最高位(最左边)用于代表符号位，若该位是0则表示非负数， 若该位是1则表示负数。")]),s._v(" "),a("li",[s._v("八进制和十六进制其实都是二进制的简写。")])]),s._v(" "),a("h5",{attrs:{id:"_7-1-进制之间的转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-1-进制之间的转换"}},[s._v("#")]),s._v(" 7.1 进制之间的转换")]),s._v(" "),a("ul",[a("li",[s._v("正十进制转换为二进制的方式\n"),a("ul",[a("li",[s._v("a.除2取余法，使用十进制整数不断地除以2取出余数，直到商为0时将\n余数逆序排序。\nb.拆分法，将十进制整数拆分为若干个二进制权重的和，有该权重下面写1，否则写0。")])])])]),s._v(" "),a("div",{staticClass:"language-text line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("10 => %2  0\n\n      5  => %2  1\n\n      2  => %2  0\n     \n      1  => %2  1\n\n      0\n===> 1 0 1 0 => 2^3 + 2^1 = 10      \n\n// 差分法\n2^3 +  + 2^1 = 10 \n1 0      1  0 = 10 \n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h5",{attrs:{id:"_7-2-正二进制转换为十进制的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-2-正二进制转换为十进制的方式"}},[s._v("#")]),s._v(" 7.2 正二进制转换为十进制的方式")]),s._v(" "),a("ul",[a("li",[s._v("a.加权法，使用二进制中的每个数字乘以当前位的权重再累加起来。")])]),s._v(" "),a("h5",{attrs:{id:"_7-3-负十进制转换为二进制的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-3-负十进制转换为二进制的方式"}},[s._v("#")]),s._v(" 7.3 负十进制转换为二进制的方式")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("a.先将十进制的绝对值转换为二进制，然后进行按位取反再加1。")])]),s._v(" "),a("li",[a("p",[s._v("计算机中负数是以补码的形式存在的:按位取反，再加1。")])]),s._v(" "),a("li",[a("p",[s._v("[补码链接](https://m.tw.llhlf.com/baike-%E4%BA%8C%E7%9A%84%E8%A3%9C%E6%95%B8）")])]),s._v(" "),a("li",[a("p",[s._v("补码可以将计算机中的减法操作转换成加法运算")])]),s._v(" "),a("li",[a("p",[s._v("时钟的计量范围是0~11，模=12。表示n位的计算机计量范围是，模=．“模”实质上是计量器产生“溢出”的量，它的值在计量器上表示不出来，计量器上只能表示出模的余数。任何有模的计量器，均可化减法为加法运算 [3] 。")])]),s._v(" "),a("li",[a("p",[s._v("假设当前时针指向8点，而准确时间是6点，调整时间可有以下两种拨法：一种是倒拨2小时，即8-2=6；另一种是顺拨10小时，8+10=12+6=6，即8-2=8+10=8+12-2(mod 12)．在12为模的系统里，加10和减2效果是一样的，因此凡是减2运算，都可以用加10来代替。若用一般公式可表示为：a-b=a-b+mod=a+mod-b。")])]),s._v(" "),a("li",[a("p",[s._v("对于计算机，其概念和方法完全一样。n位计算机，设n=8，所能表示的最大数是11111111，若再加1成100000000(9位)，但因只有8位，最高位1自然丢失（相当于丢失一个模）。又回到了 00000000，所以8位二进制系统的模为。在这样的系统中减法问题也可以化成加法问题，只需把减数用相应的补数表示就可以了。把补数用到计算机对数的处理上，就是补码")])]),s._v(" "),a("li",[a("p",[s._v("a - b =  a-b+ mod = a + mod -b ; -b = mod - b;")])]),s._v(" "),a("li",[a("p",[s._v("可以用模减去b得到-b的补码。")])]),s._v(" "),a("li",[a("p",[s._v("2^ 4")])])]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("十进制")]),s._v(" "),a("th",[s._v("原码")]),s._v(" "),a("th",[s._v("补码")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("7")]),s._v(" "),a("td",[s._v("0111")]),s._v(" "),a("td",[s._v("0111")])]),s._v(" "),a("tr",[a("td",[s._v("6")]),s._v(" "),a("td",[s._v("0110")]),s._v(" "),a("td",[s._v("0110")])]),s._v(" "),a("tr",[a("td",[s._v("5")]),s._v(" "),a("td",[s._v("0101")]),s._v(" "),a("td",[s._v("0101")])]),s._v(" "),a("tr",[a("td",[s._v("4")]),s._v(" "),a("td",[s._v("0100")]),s._v(" "),a("td",[s._v("0100")])]),s._v(" "),a("tr",[a("td",[s._v("3")]),s._v(" "),a("td",[s._v("0011")]),s._v(" "),a("td",[s._v("0011")])]),s._v(" "),a("tr",[a("td",[s._v("2")]),s._v(" "),a("td",[s._v("0010")]),s._v(" "),a("td",[s._v("0010")])]),s._v(" "),a("tr",[a("td",[s._v("1")]),s._v(" "),a("td",[s._v("0001")]),s._v(" "),a("td",[s._v("0001")])]),s._v(" "),a("tr",[a("td",[s._v("0")]),s._v(" "),a("td",[s._v("0000")]),s._v(" "),a("td",[s._v("0000")])]),s._v(" "),a("tr",[a("td",[s._v("-1")]),s._v(" "),a("td",[s._v("1001")]),s._v(" "),a("td",[s._v("1111")])]),s._v(" "),a("tr",[a("td",[s._v("-2")]),s._v(" "),a("td",[s._v("1010")]),s._v(" "),a("td",[s._v("1110")])]),s._v(" "),a("tr",[a("td",[s._v("-3")]),s._v(" "),a("td",[s._v("1011")]),s._v(" "),a("td",[s._v("1101")])]),s._v(" "),a("tr",[a("td",[s._v("-4")]),s._v(" "),a("td",[s._v("1100")]),s._v(" "),a("td",[s._v("1100")])]),s._v(" "),a("tr",[a("td",[s._v("-5")]),s._v(" "),a("td",[s._v("1101")]),s._v(" "),a("td",[s._v("1011")])]),s._v(" "),a("tr",[a("td",[s._v("-6")]),s._v(" "),a("td",[s._v("1110")]),s._v(" "),a("td",[s._v("1010")])]),s._v(" "),a("tr",[a("td",[s._v("-7")]),s._v(" "),a("td",[s._v("1111")]),s._v(" "),a("td",[s._v("1001")])])])]),s._v(" "),a("ul",[a("li",[s._v("整数和0的补码和源码是一样的。")]),s._v(" "),a("li",[s._v("负数的补码：原码除符号位去反加1 或者 模 - 原码")]),s._v(" "),a("li",[s._v("表示的有符号数中负数比整数多一个，是因为0的补码是0，占用了一个整数。")])]),s._v(" "),a("h5",{attrs:{id:"_7-4-负二进制转换为十进制的方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-4-负二进制转换为十进制的方式"}},[s._v("#")]),s._v(" 7.4 负二进制转换为十进制的方式")]),s._v(" "),a("ul",[a("li",[s._v("a.先减1再按位取反，合并为十进制整数后添加负号。")])]),s._v(" "),a("h5",{attrs:{id:"_8数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8数据类型"}},[s._v("#")]),s._v(" 8数据类型")]),s._v(" "),a("h5",{attrs:{id:"_8-1-单个字节表示的整数范围-重中之重"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-1-单个字节表示的整数范围-重中之重"}},[s._v("#")]),s._v(" 8.1.单个字节表示的整数范围(重中之重)")]),s._v(" "),a("ul",[a("li",[s._v("在计算机中单个字节表示八位二进制位，其中最高位(最左边)代表符号位，\n使用0代表非负数，使用1代表负数，具体表示的整数范围如下:")]),s._v(" "),a("li",[s._v("非负数表示范围:0000 0000 ~ 0111 1111 => 0 ~ 127 => 0 ~ 2^7-1")]),s._v(" "),a("li",[s._v("负数表示范围:1000 0000 ~ 1111 1111 => -128 ~ -1 => -2^7 ~ -2^0")]),s._v(" "),a("li",[s._v("单个字节表示的整数范围是:-2^7 ~ 2^7-1，也就是-128 ~ 127.")])]),s._v(" "),a("h5",{attrs:{id:"_8-2java语言中描述整数数据的类型有"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-2java语言中描述整数数据的类型有"}},[s._v("#")]),s._v(" 8.2Java语言中描述整数数据的类型有:")]),s._v(" "),a("ul",[a("li",[s._v("byte、short、int、long，荐int类型")]),s._v(" "),a("li",[s._v("其中byte类型在内存空间中占1个字节，表示范围是:-2^7 ~ 2^7-1.")]),s._v(" "),a("li",[s._v("其中short类型在内存空间中占2个字节，表示范围是:-2^15 ~ 2^15-1.")]),s._v(" "),a("li",[s._v("其中int类型在内存空间中占4个字节，表示范围是:-2^31 ~ 2^31-1.")]),s._v(" "),a("li",[s._v("其中long类型在内存空间中占8个字节，表示范围是:-2^63 ~ 2^63-1.")]),s._v(" "),a("li",[s._v("在Java程序中直接写出的整数数据叫做直接量/字面值/常量，默认为int类 型。若希望表达更大的直接量，则在直接量的后面加上l或者L，推荐L。")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Num")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// byte b= 250; // java: 不兼容的类型: 从int转换到byte可能会有损失")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// short c = 300000; // java: 不兼容的类型: 从int转换到short可能会有损失")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("333333")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//      int f = 233333333333333333; // java: 整数太大")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//      int l = 233333333333333333L;  java: 不兼容的类型: 从long转换到int可能会有损失")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v("  l1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("233333333333333333L")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("ul",[a("li",[s._v("上面的数字字面量没有L的默认是int,当我们传递超过int范围的数字，就会报错：java: 整数太大，这个时候我们该使用long int字面量："),a("code",[s._v("233333333333333333L")])]),s._v(" "),a("li",[s._v("当我们使用字面量为变量赋值时，在变量类型范围内会自动作类型转换，当超过会报错："),a("code",[s._v("java: 不兼容的类型: 从int转换到byte可能会有损失")]),s._v("等。")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v("  m "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),s._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//java: 不兼容的类型: 从int转换到byte可能会有损失")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("上面会报错是因为我们赋值给c的是一个变量，变量的值是会变化的，编译器不能保证它一直在c范围内。")]),s._v(" "),a("li",[s._v("同时也不表明java不允许不同类型的变量之间赋值（强类型语言）。")])]),s._v(" "),a("h5",{attrs:{id:"_8-3-浮点类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-3-浮点类型"}},[s._v("#")]),s._v(" 8.3 浮点类型")]),s._v(" "),a("ul",[a("li",[s._v("Java语言中用于描述小数数据的类型:float 和 double，推荐double类型")]),s._v(" "),a("li",[s._v("其中float类型在内存空间占4个字节，叫做单精度浮点数，可以表示7位\n有效数字，范围:-3.403E38~3.403E38。")]),s._v(" "),a("li",[s._v("其中double类型在内存空间占8个字节，叫做双精度浮点数，可以表示15\n位有效数字，范围:-1.798E308~1.798E308。")]),s._v(" "),a("li",[s._v("Java程序中直接写出的小数数据叫做直接量，默认为double类型，若希望 表达float类型的直接量，则需要在直接量的后面加上f或者F.")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" doubleType "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("float")]),s._v(" f "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.1415926F")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// java: 不兼容的类型: 从double转换到float可能会有损失")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"f = "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//f = 3.1415925")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("double")]),s._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.1415926")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"d = "')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//d = 3.1415926")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("ul",[a("li",[s._v("Java中浮点数常量默认是"),a("code",[s._v("double")]),s._v("类型的，若将其直接复制给"),a("code",[s._v("float")]),s._v("类型的变量，则会出现精度丢失的问题。")]),s._v(" "),a("li",[s._v("用"),a("code",[s._v("float")]),s._v("表示"),a("code",[s._v("3.1425926F")]),s._v("这个数字，但是打印的结果确实"),a("code",[s._v("3.1425925")]),s._v(",这是因为"),a("code",[s._v("float")]),s._v("类型表示有效数字是7位。")]),s._v(" "),a("li",[s._v("0.1 + 0.2 != 0.3 ？")])]),s._v(" "),a("h5",{attrs:{id:"_8-4-布尔类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-4-布尔类型"}},[s._v("#")]),s._v(" 8.4 布尔类型")]),s._v(" "),a("ul",[a("li",[s._v("Java语言中用于描述真假信息类型有:boolean，数值只有:true 和 false。")]),s._v(" "),a("li",[s._v("布尔类型在内存空间中所占大小没有明确的规定，可以认为是1个字节")])]),s._v(" "),a("h5",{attrs:{id:"_8-5-字符类型和字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-5-字符类型和字符串"}},[s._v("#")]),s._v(" 8.5 字符类型和字符串")]),s._v(" "),a("ul",[a("li",[s._v("Java语言中用于描述单个字符的数据类型:char类型。如:'a'、'中'等。")]),s._v(" "),a("li",[s._v("其中char类型在内存空间中占2个字节并且没有符号位，表示的范围是: 0 ~ 65535，由于现实生活中很少有数据能够被单个字符描述，因此以后 的开发中更多的使用由多个字符串起来组成的字符串，使用String类型加 以描述，如:“hello”、“奇点”等。")]),s._v(" "),a("li",[s._v("计算机的底层只识别0和1组成的二进制序列，对于字符'a'这样的图案来 说不满足该规则，因此该数据无法直接在计算机中存储，但现实生活中 存在这样的图案数据需要计算机存储，为了使得该数据能够存储起来就 可以给该数据指定一个编号，然后将编号存储起来即可，该编号就叫做 ASCII。")]),s._v(" "),a("li",[s._v("要求掌握的ASCII有:'0'-48 'A'-65 'a'-97 空格-32 换行符-10")]),s._v(" "),a("li",[s._v("Java字符类型采用Unicode字符集编码。Unicode是世界通用的定长字符 集，所有的字符都是16位。")]),s._v(" "),a("li",[s._v('转义字符有:"",使用转移字符是为了让字符表示原本的含义，例如\n字符串的"代表了字符串的开始和结束，为了表示"本来的意思，我们需要写成".')]),s._v(" "),a("li",[s._v("由于char类型存储的是unicode编码，本质上是两个字节范围内的数字，所以可以转成int类型。")])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" string "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("char")]),s._v(" s "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\u4e2d\\u6587"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s="')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 转换字符到int类型")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s="')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s1 ="')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// s1 =中文")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("h5",{attrs:{id:"_8-6-基本数据类型之间的转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-6-基本数据类型之间的转换"}},[s._v("#")]),s._v(" 8.6 基本数据类型之间的转换")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Java语言中基本数据类型之间的转换方式:自动类型转换和强制类型转换。")])]),s._v(" "),a("li",[a("p",[s._v("其中自动类型转换主要指从小类型到大类型之间的转换。")])]),s._v(" "),a("li",[a("p",[a("code",[s._v("byte->stort->int->long->float->double")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("char->int")]),s._v(".")])]),s._v(" "),a("li",[a("p",[s._v("上面的"),a("code",[s._v("long")]),s._v("类型虽然是8个字节长度，"),a("code",[s._v("float")]),s._v("是四个字节，但是由于底层的存储方式不同，导致"),a("code",[s._v("float")]),s._v("表示的范围更大。")])]),s._v(" "),a("li",[a("p",[s._v("强制类型的语法：目标类型 变量名 = (目标类型)源类型变量名;")])])]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Transform")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),s._v(" s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("short")]),s._v(" s2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" s1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 自动类型转换")]),s._v("\n\n        s1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("s2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 需要强转，可能出现损耗")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);